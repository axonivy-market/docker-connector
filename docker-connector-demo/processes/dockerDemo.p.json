{
  "format" : "10.0.0",
  "id" : "18A50F6DFF3B27D1",
  "config" : {
    "data" : "com.axonivy.market.docker.connector.demo.Data"
  },
  "elements" : [ {
      "id" : "f0",
      "type" : "RequestStart",
      "name" : "start.ivp",
      "config" : {
        "callSignature" : "start",
        "outLink" : "start.ivp",
        "tags" : "demo"
      },
      "visual" : {
        "at" : { "x" : 88, "y" : 296 }
      },
      "connect" : { "id" : "f4", "to" : "f3" }
    }, {
      "id" : "f1",
      "type" : "TaskEnd",
      "visual" : {
        "at" : { "x" : 968, "y" : 296 }
      }
    }, {
      "id" : "f3",
      "type" : "SubProcessCall",
      "name" : "Create axonivy-engine container",
      "config" : {
        "call" : {
          "params" : [
            { "name" : "image", "type" : "String" },
            { "name" : "name", "type" : "String" },
            { "name" : "ports", "type" : "List<com.axonivy.connector.docker.PortBinding>" }
          ],
          "map" : {
            "param.image" : "\"axonivy/axonivy-engine:10.0\"",
            "param.name" : "\"axonivy-engine\""
          },
          "code" : [
            "import com.axonivy.connector.docker.PortBinding;",
            "PortBinding binding = new PortBinding();",
            "binding.publicPort = 8080;",
            "binding.internalPort = 8080;",
            "",
            "param.ports = [binding];"
          ]
        },
        "processCall" : "docker:createContainer(String,String,List<com.axonivy.connector.docker.PortBinding>)",
        "output" : {
          "map" : {
            "out" : "in",
            "out.containerId" : "result.containerId"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 216, "y" : 296 }
      },
      "connect" : { "id" : "f6", "to" : "f5" }
    }, {
      "id" : "f5",
      "type" : "SubProcessCall",
      "name" : "Start Container",
      "config" : {
        "processCall" : "docker:startContainer(String)",
        "call" : {
          "params" : [
            { "name" : "containerId", "type" : "String" }
          ],
          "map" : {
            "param.containerId" : "in.containerId"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 360, "y" : 296 }
      },
      "connect" : { "id" : "f13", "to" : "f12" }
    }, {
      "id" : "f7",
      "type" : "SubProcessCall",
      "name" : "Stop Container",
      "config" : {
        "processCall" : "docker:stopContainer(String)",
        "call" : {
          "params" : [
            { "name" : "containerId", "type" : "String" }
          ],
          "map" : {
            "param.containerId" : "in.containerId"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 680, "y" : 296 }
      },
      "connect" : { "id" : "f10", "to" : "f9" }
    }, {
      "id" : "f9",
      "type" : "SubProcessCall",
      "name" : "docker",
      "config" : {
        "processCall" : "docker:removeContainer(String)",
        "call" : {
          "params" : [
            { "name" : "containerId", "type" : "String" }
          ],
          "map" : {
            "param.containerId" : "in.containerId"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 840, "y" : 296 }
      },
      "connect" : { "id" : "f2", "to" : "f1" }
    }, {
      "id" : "f11",
      "type" : "ProcessAnnotation",
      "name" : "This demo creates a Docker container for the Docker image axonivy/axonivy-engine:10.0 then starts, stops and removes it.",
      "visual" : {
        "at" : { "x" : 211, "y" : 165 },
        "size" : { "width" : 274, "height" : 102 }
      }
    }, {
      "id" : "f12",
      "type" : "DialogCall",
      "name" : "ShowEngine",
      "config" : {
        "dialogId" : "com.axonivy.market.docker.connector.demo.ShowEngine",
        "startMethod" : "start()"
      },
      "visual" : {
        "at" : { "x" : 520, "y" : 296 }
      },
      "connect" : { "id" : "f8", "to" : "f7" }
    } ]
}